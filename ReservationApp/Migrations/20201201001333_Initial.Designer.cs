// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReservationApp.Models;

namespace ReservationApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201201001333_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ReservationApp.Models.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("ContactBirthday")
                        .HasColumnType("Date");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactPhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(12)");

                    b.Property<int>("ContactTypeId")
                        .HasColumnType("int");

                    b.HasKey("ContactId");

                    b.HasIndex("ContactTypeId")
                        .IsUnique();

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("ReservationApp.Models.ContactType", b =>
                {
                    b.Property<int>("CTId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CTDescription")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CTName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CTId");

                    b.ToTable("ContactTypes");
                });

            modelBuilder.Entity("ReservationApp.Models.Reservation", b =>
                {
                    b.Property<string>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContactId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContactId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("Date");

                    b.Property<string>("ReservationDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ReservationId");

                    b.HasIndex("ContactId1");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("ReservationApp.Models.Contact", b =>
                {
                    b.HasOne("ReservationApp.Models.ContactType", "ContactType")
                        .WithOne("Contact")
                        .HasForeignKey("ReservationApp.Models.Contact", "ContactTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContactType");
                });

            modelBuilder.Entity("ReservationApp.Models.Reservation", b =>
                {
                    b.HasOne("ReservationApp.Models.Contact", "Contact")
                        .WithMany("Reservations")
                        .HasForeignKey("ContactId1");

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("ReservationApp.Models.Contact", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("ReservationApp.Models.ContactType", b =>
                {
                    b.Navigation("Contact");
                });
#pragma warning restore 612, 618
        }
    }
}
